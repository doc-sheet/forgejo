platform: linux/amd64

variables:
  - &golang_image 'golang:1.19'
  - &gitea_test_env_image 'gitea/test_env:linux-amd64'
  - &git_image 'docker:git'
  - &drone_git_image 'drone/git'

workspace:
  base: /go
  path: src/codeberg/gitea

pipeline:
  deps-backend:
    image: *golang_image
    pull: true
    secrets:
      - goproxy_override
    commands:
    - test "$${GOPROXY_OVERRIDE-}" != "" && export GOPROXY="$${GOPROXY_OVERRIDE}"
    - make deps-backend

  security-check:
    image: *golang_image
    pull: true
    secrets:
      - goproxy_override
    commands:
    - test "$${GOPROXY_OVERRIDE-}" != "" && export GOPROXY="$${GOPROXY_OVERRIDE}"
    - make security-check

  lint-backend:
    image: *gitea_test_env_image
    pull: true
    secrets:
      - goproxy_override
    environment:
    - TAGS=bindata sqlite sqlite_unlock_notify
    - GOSUMDB=sum.golang.org
    commands:
    - test "$${GOPROXY_OVERRIDE-}" != "" && export GOPROXY="$${GOPROXY_OVERRIDE}"
    - make lint-backend

  checks-backend:
    image: *golang_image
    pull: true
    secrets:
      - goproxy_override
    commands:
    - test "$${GOPROXY_OVERRIDE-}" != "" && export GOPROXY="$${GOPROXY_OVERRIDE}"
    - make --always-make checks-backend

  fetch-tags:
    image: *git_image
    pull: true
    commands:
    - git config --add safe.directory '*'
    - git fetch --tags --force

  tag-pre-condition:
    image: *drone_git_image
    pull: true
    commands:
    - git update-ref refs/heads/tag_test ${CI_COMMIT_SHA}

  prepare-test-env:
    image: *gitea_test_env_image
    pull: true
    secrets:
      - goproxy_override
    commands:
    - test "$${GOPROXY_OVERRIDE-}" != "" && export GOPROXY="$${GOPROXY_OVERRIDE}"
    - ./build/test-env-prepare.sh

  build-test:
    image: *gitea_test_env_image
    pull: true
    secrets:
      - goproxy_override
    environment:
    - GOSUMDB=sum.golang.org
    - TAGS=bindata sqlite sqlite_unlock_notify
    commands:
    - test "$${GOPROXY_OVERRIDE-}" != "" && export GOPROXY="$${GOPROXY_OVERRIDE}"
    - su gitea -c './build/test-env-check.sh'
    - su gitea -c 'make backend'

  unit-test:
    image: *gitea_test_env_image
    pull: true
    secrets:
      - github_read_token
      - goproxy_override
    environment:
    - TAGS=bindata sqlite sqlite_unlock_notify
    - RACE_ENABLED=true
    commands:
    - test "$${GOPROXY_OVERRIDE-}" != "" && export GOPROXY="$${GOPROXY_OVERRIDE}"
    - su gitea -c 'make unit-test-coverage test-check'

  # test-sqlite:
  #   image: *gitea_test_env_image
  #   environment:
  #   - USE_REPO_TEST_DIR=1
  #   - GOPROXY=off
  #   - TAGS=bindata gogit sqlite sqlite_unlock_notify
  #   - TEST_TAGS=bindata gogit sqlite sqlite_unlock_notify
  #   commands:
  #   - su gitea -c 'timeout -s ABRT 120m make test-sqlite-migration test-sqlite'
